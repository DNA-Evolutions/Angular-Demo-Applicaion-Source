/**
 * DNA Evolutions - JOpt.TourOptimizer
 * This is DNA\'s JOpt.TourOptimizer service. A RESTful Spring Boot application using springdoc-openapi and OpenAPI 3.
 *
 * The version of the OpenAPI document: unknown
 * Contact: info@dna-evolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { TypeWithExpertise } from './typeWithExpertise';
import { ConstraintType } from './constraintType';
import { TypeWithExpertiseConstraintAllOf } from './typeWithExpertiseConstraintAllOf';


export interface TypeWithExpertiseConstraint extends ConstraintType {
    /**
     * The types with expertise
     */
    typesWithExpertise: Array<TypeWithExpertise>;
    /**
     * The cost model for matching the expertise.
     */
    costModel?: TypeWithExpertiseConstraint.CostModelEnum;
    /**
     * The typeName of the object
     */
    _?: TypeWithExpertiseConstraint.UEnum;
}
export namespace TypeWithExpertiseConstraint {
    export type CostModelEnum = 'PENALIZE_MATCHING_SKILL_HIGH_DELTA' | 'PENALIZE_MATCHING_SKILL_LOW_DELTA' | 'NO_PENALIZE_MATCHING_SKILL';
    export const CostModelEnum = {
        PenalizeMatchingSkillHighDelta: 'PENALIZE_MATCHING_SKILL_HIGH_DELTA' as CostModelEnum,
        PenalizeMatchingSkillLowDelta: 'PENALIZE_MATCHING_SKILL_LOW_DELTA' as CostModelEnum,
        NoPenalizeMatchingSkill: 'NO_PENALIZE_MATCHING_SKILL' as CostModelEnum
    };
    export type UEnum = 'TypeWithExpertise';
    export const UEnum = {
        TypeWithExpertise: 'TypeWithExpertise' as UEnum
    };
}


