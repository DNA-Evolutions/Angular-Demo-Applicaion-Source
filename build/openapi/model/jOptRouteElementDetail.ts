/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { JOptRouteElementDetailEarlyDeviation } from './jOptRouteElementDetailEarlyDeviation';
import { JOptViolation } from './jOptViolation';
import { JOptRouteElementDetailIdleTime } from './jOptRouteElementDetailIdleTime';
import { JOptRouteElementDetailDepartureTime } from './jOptRouteElementDetailDepartureTime';
import { JOptRouteElementDetailVisitDuration } from './jOptRouteElementDetailVisitDuration';
import { JOptRouteElementDetailLateDeviation } from './jOptRouteElementDetailLateDeviation';
import { JOptRouteElementDetailTransitionDistance } from './jOptRouteElementDetailTransitionDistance';


/**
 * JOptRouteElementDetail model for the documentation
 */
export interface JOptRouteElementDetail { 
    /**
     * The unique id of the visited element
     */
    id: string;
    /**
     * The original start of the choosen OpeningHours timeWindow
     */
    hoursStart: string;
    /**
     * The arrival time at of the visitor the element
     */
    arrivalTime: string;
    departureTime: JOptRouteElementDetailDepartureTime;
    idleTime: JOptRouteElementDetailIdleTime;
    transitionDistance: JOptRouteElementDetailTransitionDistance;
    visitDuration: JOptRouteElementDetailVisitDuration;
    /**
     * The id of the visitor
     */
    visitorId: string;
    /**
     * The index of the vistirs choosen workingHour
     */
    visitorWorkingHourIndex: number;
    earlyDeviation: JOptRouteElementDetailEarlyDeviation;
    lateDeviation: JOptRouteElementDetailLateDeviation;
    /**
     * The schedule status of the element
     */
    scheduleStatus: JOptRouteElementDetail.ScheduleStatusEnum;
    /**
     * The node violations, like late
     */
    nodeViolations: Array<JOptViolation>;
    /**
     * The load change value for the node after visitation.
     */
    loadChange: Array<number>;
}
export namespace JOptRouteElementDetail {
    export type ScheduleStatusEnum = 'UNKNOWN' | 'EARLY' | 'IDLE' | 'INTIME' | 'LATE';
    export const ScheduleStatusEnum = {
        UNKNOWN: 'UNKNOWN' as ScheduleStatusEnum,
        EARLY: 'EARLY' as ScheduleStatusEnum,
        IDLE: 'IDLE' as ScheduleStatusEnum,
        INTIME: 'INTIME' as ScheduleStatusEnum,
        LATE: 'LATE' as ScheduleStatusEnum
    };
}


